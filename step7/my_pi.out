;IR code
;LABEL factorial
;LINK
;STOREI 0 $T1
;NEF $P1 $T1 label_1
;STOREI 1 $T2
;STOREI $T2 $T3
;STOREI $T3 $R
;RET
;JUMP label_2
;LABEL label_1
;STOREI 1 $T4
;SUBF $P1 $T4 $T5
;PUSH
;PUSH $T5
;JSR factorial
;POP
;POP $T6
;STOREF $T6 $L1
;MULTF $L1 $P1 $T8
;STOREF $T8 $L2
;LABEL label_2
;STOREF $L2 $T9
;STOREF $T9 $R
;RET
;LABEL exponential
;LINK
;STOREF 1.0 $T1
;STOREF $T1 $L1
;LABEL label_4
;STOREI 0 $T2
;LEF $P2 $T2 label_3
;MULTF $L1 $P1 $T3
;STOREF $T3 $L1
;STOREI 1 $T4
;SUBF $P2 $T4 $T5
;STOREF $T5 $P2
;JUMP label_4
;LABEL label_3
;STOREF $L1 $T6
;STOREF $T6 $R
;RET
;LABEL estPIGL
;LINK
;STOREF 0.0 $T1
;STOREF $T1 $L1
;STOREF 1.0 $T2
;STOREF $T2 $L2
;STOREI 1 $T3
;STOREF $T3 $L3
;LABEL label_6
;GEF $L2 $P1 label_5
;STOREI 2 $T4
;MULTF $T4 $L2 $T5
;STOREI 1 $T6
;SUBF $T5 $T6 $T7
;DIVF $L3 $T7 $T8
;ADDF $L1 $T8 $T9
;STOREF $T9 $L1
;STOREI 1 $T10
;ADDF $L2 $T10 $T11
;STOREF $T11 $L2
;STOREI 0 $T12
;SUBF $T12 $L3 $T13
;STOREF $T13 $L3
;JUMP label_6
;LABEL label_5
;STOREI 4 $T14
;MULTF $T14 $L1 $T15
;STOREF $T15 $T16
;STOREF $T16 $R
;RET
;LABEL estPIEU
;LINK
;STOREF 0.0 $T1
;STOREF $T1 $L1
;STOREF 0.0 $T2
;STOREF $T2 $L2
;LABEL label_8
;GEF $L2 $P1 label_7
;PUSH
;PUSH $L2
;JSR factorial
;POP
;POP $T3
;PUSH
;PUSH 2
;PUSH $T3
;JSR exponential
;POP
;POP
;POP $T5
;STOREI 1 $T7
;ADDF $L2 $T7 $T8
;PUSH
;PUSH $T8
;PUSH 2
;JSR exponential
;POP
;POP
;POP $T9
;STOREI 2 $T11
;MULTF $T11 $L2 $T12
;STOREI 1 $T13
;ADDF $T12 $T13 $T14
;PUSH
;PUSH $T14
;JSR factorial
;POP
;POP $T15
;MULTF $T5 $T9 $T17
;DIVF $T17 $T15 $T18
;ADDF $L1 $T18 $T19
;STOREF $T19 $L1
;STOREI 1 $T20
;ADDF $L2 $T20 $T21
;STOREF $T21 $L2
;JUMP label_8
;LABEL label_7
;STOREF $L1 $T22
;STOREF $T22 $R
;RET
;LABEL estPIGO
;LINK
;STOREF 0.0 $T1
;STOREF $T1 $L1
;STOREF 0.0 $T2
;STOREF $T2 $L2
;LABEL label_10
;GEF $L2 $P1 label_9
;PUSH
;PUSH $L2
;JSR factorial
;POP
;POP $T3
;PUSH
;PUSH 2
;PUSH $T3
;JSR exponential
;POP
;POP
;POP $T5
;STOREI 2 $T7
;MULTF $T7 $L2 $T8
;STOREI 1 $T9
;ADDF $T8 $T9 $T10
;PUSH
;PUSH $T10
;JSR factorial
;POP
;POP $T11
;DIVF $T5 $T11 $T13
;ADDF $L1 $T13 $T14
;STOREF $T14 $L1
;STOREI 1 $T15
;ADDF $L2 $T15 $T16
;STOREF $T16 $L2
;JUMP label_10
;LABEL label_9
;MULTF gosperConst $L1 $T17
;STOREF $T17 $T18
;STOREF $T18 $R
;RET
;LABEL main
;LINK
;STOREF 2.59808 $T1
;STOREF $T1 gosperConst
;WRITES intro
;WRITES input1
;READF $L1
;PUSH
;PUSH $L1
;JSR estPIGL
;POP
;POP $T2
;STOREF $T2 $L2
;WRITEF $L2
;WRITES eol
;WRITES input2
;READF $L1
;PUSH
;PUSH $L1
;JSR estPIEU
;POP
;POP $T4
;STOREF $T4 $L2
;WRITEF $L2
;WRITES eol
;WRITES input3
;READF $L1
;PUSH
;PUSH $L1
;JSR estPIGO
;POP
;POP $T6
;STOREF $T6 $L2
;WRITEF $L2
;WRITES eol
;RET
;tiny code
str intro "This program estimates pi based on\na few different algorithms.\n"
str input1 "Enter the number of iterations for Gregory and Leibniz's (at least 1000): "
str input2 "Enter the number of iterations for Euler's (MAX 19): "
str input3 "Enter the number of iterations for Gosper's (MAX 21): "
str eol "\n"
var gosperConst
push
push r0
push r1
push r2
push r3
jsr main
sys halt
label estPIEU
link 100
move 0.0 r0
move r0 $-1
move 0.0 r0
move r0 $-2
label label_8
move $6 r0
cmpr $-2 r0
jge label_7
push
push $-2
push r0
push r1
push r2
push r3
jsr factorial
pop r3
pop r2
pop r1
pop r0
pop
move $-5 r0
pop r0
push
move $-27 r1
move 2 r1
push r1
push r0
push r0
push r1
push r2
push r3
jsr exponential
pop r3
pop r2
pop r1
pop r0
pop
pop
move $-7 r2
pop r2
move 1 r3
move $-2 r0
addr r3 r0
push
push r0
move $-28 r3
move 2 r3
push r3
push r0
push r1
push r2
push r3
jsr exponential
pop r3
pop r2
pop r1
pop r0
pop
pop
move $-11 r0
pop r0
move 2 r0
move r0 r0
mulr $-2 r0
move 1 r0
move $-14 r0
move $-15 r3
move r0 r0
addr r3 r0
push
push r0
push r0
push r1
push r2
push r3
jsr factorial
pop r3
pop r2
pop r1
pop r0
pop
move $-17 r3
pop r3
move $-11 r0
move r2 r3
mulr r0 r3
move $-17 r0
move r3 r3
divr r0 r3
move $-1 r0
addr r3 r0
move r0 $-1
move 1 r0
move $-2 r3
addr r0 r3
move r3 $-2
jmp label_8
label label_7
move $-1 r0
move r0 $7
unlnk
ret
label estPIGL
link 100
move 0.0 r0
move r0 $-1
move 1.0 r0
move r0 $-2
move 1 r0
move r0 $-3
label label_6
move $6 r0
cmpr $-2 r0
jge label_5
move 2 r1
move r1 r2
mulr $-2 r2
move 1 r1
move r2 r3
subr r1 r3
move $-3 r1
divr r3 r1
move $-1 r2
addr r1 r2
move r2 $-1
move 1 r1
move $-2 r2
addr r1 r2
move r2 $-2
move 0 r1
move r1 r2
subr $-3 r2
move r2 $-3
jmp label_6
label label_5
move 4 r1
move r1 r2
mulr $-1 r2
move r2 r1
move r1 $7
unlnk
ret
label estPIGO
link 100
move 0.0 r0
move r0 $-1
move 0.0 r0
move r0 $-2
label label_10
move $6 r0
cmpr $-2 r0
jge label_9
push
push $-2
push r0
push r1
push r2
push r3
jsr factorial
pop r3
pop r2
pop r1
pop r0
pop
move $-5 r0
pop r0
push
move $-23 r1
move 2 r1
push r1
push r0
push r0
push r1
push r2
push r3
jsr exponential
pop r3
pop r2
pop r1
pop r0
pop
pop
move $-7 r2
pop r2
move 2 r3
move r3 r0
mulr $-2 r0
move 1 r3
move r0 r0
addr r3 r0
push
push r0
push r0
push r1
push r2
push r3
jsr factorial
pop r3
pop r2
pop r1
pop r0
pop
move $-13 r3
pop r3
move r2 r0
divr r3 r0
move $-1 r0
addr r0 r0
move r0 $-1
move 1 r0
move $-2 r0
addr r0 r0
move r0 $-2
jmp label_10
label label_9
move gosperConst r0
mulr $-1 r0
move r0 r0
move r0 $7
unlnk
ret
label exponential
link 100
move 1.0 r0
move r0 $-1
label label_4
move 0 r0
cmpr $7 r0
jle label_3
move $-1 r0
mulr $6 r0
move r0 $-1
move 1 r0
move $7 r1
subr r0 r1
move r1 $7
jmp label_4
label label_3
move $-1 r0
move r0 $8
unlnk
ret
label factorial
link 100
move 0 r0
cmpr $6 r0
jne label_1
move 1 r0
move r0 r1
move r1 $7
unlnk
ret
jmp label_2
label label_1
move 1 r0
move $6 r1
subr r0 r1
push
push r1
push r0
push r1
push r2
push r3
jsr factorial
pop r3
pop r2
pop r1
pop r0
pop
move $-8 r0
pop r0
move r0 $-1
move $-1 r0
mulr $6 r0
move r0 $-2
label label_2
move $-2 r0
move r0 $7
unlnk
ret
label main
link 100
move 2.59808 r0
move r0 gosperConst
sys writes intro
sys writes input1
sys readr $-1
push
push $-1
push r0
push r1
push r2
push r3
jsr estPIGL
pop r3
pop r2
pop r1
pop r0
pop
move $-4 r0
pop r0
move r0 $-2
sys writer $-2
sys writes eol
sys writes input2
sys readr $-1
push
push $-1
push r0
push r1
push r2
push r3
jsr estPIEU
pop r3
pop r2
pop r1
pop r0
pop
move $-6 r0
pop r0
move r0 $-2
sys writer $-2
sys writes eol
sys writes input3
sys readr $-1
push
push $-1
push r0
push r1
push r2
push r3
jsr estPIGO
pop r3
pop r2
pop r1
pop r0
pop
move $-8 r0
pop r0
move r0 $-2
sys writer $-2
sys writes eol
unlnk
ret
